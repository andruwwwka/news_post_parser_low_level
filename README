Скрипт написан на python3.4. Алгоритм основан на использовании бибилотек lxml и urllib3, следовательно требуется,
чтобы на машине, на которой выполняется скрипт были установлены данные библиотеки.

Алгоритм основан на разметке сайтов блочными тегами.

Константы и настройки.
файл settings - файл настроек селектора для ресурса (далее "частные настройки"). Файл настроек имеет структуру
словаря python, где ключом является адрес сайта формата 'lenta.ru', значением - словарь правил селектора для
атрибутов статьи. Все атрибуты являются обязательными ('title', 'text', 'link_text', 'link'). Частные настройки могут
быть ориентированы помимо самих тегов на их классы.
cur_dir - получение текущей директории, необходимое для выполнения усложнения задачи #1 (далее "текущая директория")
default_selectors_config - стандартный настройки селектора. Используются в тех случаях, когда файл настроек селектора
не найден или настройки в файле не валидны (далее "настройки по-умолчанию")

Алгоритм запускается из командной строки командой python main.py <URL list>. Таким образом, алгоритм принимает в качестве
параметров один или несколько url'ов на статьи. Изначально, проводится проверка на наличие входных параметров. Если ни
один параметр не был передан в скрипт, то он завершает свою работу и сообщает о том, что не было получено
ни одного параметра. Если параметры были переданы, то происходит чтение настроек селектора из файла настроек, если таковой
имеется, иначе за настройки селектора принимаются настройки по-умолчанию (настройки селектора представляют собой xpath
выражения). Далее инициализируется класс парсера, в который передается список url'ов и настройки селектора. После чего
запускается парсер (вызывается метод run(), в котором перебираются все полученные url'ы и происходит разбор страницы,
если url валиден).

Алгоритм парсера построен следующим образом:
Если статья была ранее распарсена, то выводится предупреждение об этом и завершается работа задания, иначе происходит
валидация селектора. Если он валиден и в файле настроек селектора есть настройки для текущего ресурса, то берутся частные
настройки, иначе настройки по-умолчанию. После чего происходит парсинг атрибутов статьи в соответсвии с xpath выражениями
селектора. Распарсеные блоки записываются в файл по правилу:
http://lenta.ru/news/2013/03/dtp/index.html => [CUR_DIR]/lenta.ru/news/2013/03/dtp/index.txt

Испытания проводились на следующих ресурсах:
http://lenta.ru/news/2015/08/19/666vipusknikov/
http://news.rambler.ru/science/31092820/
http://lenta.ru/news/2015/08/20/euro/
http://zory-msh.ru/article/80618/
http://www.vz.ru/news/2015/8/21/762434.html
http://ria.ru/moscow/20150821/1198957020.html

Направление дальнейшего улучшения/развития программы:

Улучшения:
1. Доработка получения входных параметров - передавать в качестве параметров не один(несколько урлов),
а файл со списком урлов для обработки алгоритмом (Представленный алгоритм уже может работать со списком урлов).
2. Доработка алгоритма валидации конфигурации селектора. На данный момент валидация заключается только в том,
что проверяется наличие всех параметров и их значений. Требуется сделать валидацию значений - xpath выражений.
3. Доработка алгоритма разбора текста. Алгоритм, ориентированный исключительно на теги парсит с полезной
информацией еще и определнную (хоть и небольшую) долю мусора.

Развитие:
1. Реализация алгоритма доступа к уже распарсеным статьям.